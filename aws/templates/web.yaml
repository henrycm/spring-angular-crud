---
AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  EnvName:
    Description: Environment Name.
    Default: test
    Type: String
  CodeBucketName:
    Description: Bucket Name
    Default: agrosoft-code
    Type: String
  AppFileName:
    Description: Jar file to be deployed
    Default: facturacion-1.0.0.jar
    Type: String

Resources:
  WebSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http acess
      VpcId: !ImportValue VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 8080
        ToPort: 8080
        CidrIp: 0.0.0.0/0
      Tags:
      -
        Key: Name
        Value: !Sub SG-WEB-${EnvName}

  RootRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        -
          PolicyName: "root"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action: "s3:Get*"
                Resource: !Join ["", ["", "arn:aws:s3:::", !Ref CodeBucketName, "/*"]]

  RootInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        -
          Ref: "RootRole"
  WebInstance:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        config:
          output: {all: ">> /var/log/cloud-init-output.log"}
    Properties:
      ImageId: ami-0b33d91d
      InstanceType: t2.micro
      KeyName: henry
      IamInstanceProfile: !Ref RootInstanceProfile
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: 0
          GroupSet:
            - !Ref WebSecurityGroup
            - !ImportValue ControlSecurityGroup
          SubnetId: !ImportValue PublicSubnet
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -ex
          /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource WebInstance --region ${AWS::Region}
          yum -y install java-1.8.0
          yum -y remove java-1.7.0-openjdk
          aws s3 cp s3://${CodeBucketName}/${AppFileName} /home/ec2-user/
          nohup java -jar /home/ec2-user/${AppFileName} > /home/ec2-user/app.log 2>&1 </dev/null &
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource WebInstance --region ${AWS::Region}

Outputs:
  URL:
    Description: LB pubic URL
    Value: !GetAtt WebInstance.PublicDnsName
