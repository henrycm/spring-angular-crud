---
AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  EnvName:
    Description: Environment Name.
    Default: test
    Type: String

Resources:
  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow db acess
      VpcId: !ImportValue VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 5432
        ToPort: 5432
        CidrIp: 0.0.0.0/0
      Tags:
      -
        Key: Name
        Value: !Sub SG-DB-${EnvName}

  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow db acess
      VpcId: !ImportValue VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 5432
        ToPort: 5432
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 10.0.0.0/16
      Tags:
      -
        Key: Name
        Value: !Sub SG-DB-${EnvName}

  DBInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0b33d91d
      InstanceType: t2.micro
      KeyName: henry
      SubnetId: !ImportValue PrivateSubnet
      SecurityGroupIds:
        - Ref: DBSecurityGroup
      Tags:
      -
        Key: Name
        Value: !Sub DBInstance-${EnvName}

  DBDNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !ImportValue DNS
      Comment: DNS name db instance.
      Name: db.agrosoft.com
      Type: A
      TTL: 300
      ResourceRecords:
      - !GetAtt DBInstance.PrivateIp

Outputs:
  DBIP:
    Description: DB ip
    Value: !GetAtt DBInstance.PrivateIp
