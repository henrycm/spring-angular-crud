---
AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  EnvName:
    Description: Environment Name.
    Default: test
    Type: String
  CodeBucketName:
    Description: Bucket Name
    Default: agrosoft-code
    Type: String
  CreateBucket:
    Description: Create bucket?
    Default: N
    Type: String
    AllowedValues: [Y,N]

Conditions:
  cndCreateBucket: !Equals [ !Ref CreateBucket, Y ]

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Sub '10.0.0.0/16'
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
      -
        Key: Name
        Value: !Sub VPC-${EnvName}
  InternetGateway:
    Type: AWS::EC2::InternetGateway
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: '10.0.1.0/24'
      VpcId: !Ref VPC
      Tags:
      -
        Key: Name
        Value: !Sub SUB-PUB-${EnvName}
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable
  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: '10.0.2.0/24'
      VpcId: !Ref VPC
      Tags:
      -
        Key: Name
        Value: !Sub SUB-PRIV-${EnvName}
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet
      RouteTableId: !Ref PrivateRouteTable

  ControlSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow ssh access
      VpcId:
        Ref: VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 142.116.15.51/32
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 64.229.173.195/32
      Tags:
      -
        Key: Name
        Value: !Sub SG-CTL-${EnvName}

  CodeS3Bucket:
    Type: AWS::S3::Bucket
    Condition: cndCreateBucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Sub ${CodeBucketName}

  AwsNotificationTopic:
    Type: AWS::SNS::Topic

  AdminSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: henrycm@gmail.com
      Protocol: email
      TopicArn: !Ref AwsNotificationTopic

  DNS:
    Type: AWS::Route53::HostedZone
    Properties:
      HostedZoneConfig:
        Comment: "Hosted zone for agrosoft.com"
      Name: agrosoft.com
      VPCs:
        -
          VPCId: !Ref VPC
          VPCRegion: !Sub ${AWS::Region}
      HostedZoneTags:
        -
          Key: "Name"
          Value: !Sub DNS-${EnvName}

Outputs:
  VPC:
    Value: !Ref VPC
    Export:
      Name: VPC
  EnvName:
    Value: !Ref EnvName
    Export:
      Name: EnvName
  PublicSubnet:
    Description: Public Subnet
    Value: !Ref PublicSubnet
    Export:
      Name: PublicSubnet
  PrivateSubnet:
    Description: Private Subnet
    Value: !Ref PrivateSubnet
    Export:
      Name: PrivateSubnet
  ControlSecurityGroup:
    Description: Control Security Group
    Value: !Ref ControlSecurityGroup
    Export:
      Name: ControlSecurityGroup
  AwsNotificationTopic:
    Value: !Ref AwsNotificationTopic
    Export:
      Name: AwsNotificationTopic
  DNS:
    Value: !Ref DNS
    Export:
      Name: DNS
